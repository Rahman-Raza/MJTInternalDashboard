"use strict";var precacheConfig=[["/index.html","adb89c1f504eae3f463d2b126cf61502"],["/static/css/main.6ac6ddbb.css","c4b092a2ea9d01292bad3fb17871d013"],["/static/media/JobDescription.a51570ce.scss","a51570ce6114018be1faefbae78b585b"],["/static/media/Nav.d1b88c1f.scss","d1b88c1fdbf8b262efc0a7f33ae64ddf"],["/static/media/avatar.7a6bc100.jpg","7a6bc10028a79f78e424a9c71499fa77"],["/static/media/card-1.6ee66b2c.jpeg","6ee66b2cb8a3d9988e37b83b3b4a590e"],["/static/media/card-2.ae10829f.jpeg","ae10829f019b0103525a6cd1102ee213"],["/static/media/card-profile1-square.3122abf4.jpg","3122abf4a3e1067926c08dee7684522d"],["/static/media/dashboard-bg.81a7723f.png","81a7723faa58227f783cc250e4963325"],["/static/media/image_placeholder.ebe9884b.jpg","ebe9884b2152a08a525fcd5054019532"],["/static/media/job-position-background.fcdb5887.png","fcdb588711ac44172372ec59566966dc"],["/static/media/loginBG.2e921752.png","2e9217524518defdd94d4d8111f6c127"],["/static/media/logo-white.eec7c7f6.svg","eec7c7f60134e712ef7174c96ca7ee5a"],["/static/media/logoImage.52524b19.png","52524b19cae424bcae4e132cc596e431"],["/static/media/marc.aba54d65.jpg","aba54d652e5df3b9f1f8024cbeb6630f"],["/static/media/nav-bg2.a128a17a.png","a128a17a7c597aa67d0713549dbf3de3"],["/static/media/placeholder.1eb7fff2.jpg","1eb7fff2a469da3cc6c3311572d7696d"],["/static/media/product1.081bf019.jpg","081bf019322fc100b3b84f34d9bff302"],["/static/media/product3.a0e40011.jpg","a0e400118b382fc007111de984da7552"],["/static/media/register.49b54380.jpeg","49b54380ba092ba68ab160f3dd8d5773"],["/static/media/sidebar-2.d30c9e30.jpg","d30c9e30978c9278180dcce2bb66c054"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var r="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});